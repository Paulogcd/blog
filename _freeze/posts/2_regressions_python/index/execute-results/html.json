{
  "hash": "7cedeab213074f9caa280db5a50803eb",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Linear Regressions with Python\"\nauthor: \"Paulo Gugelmo Cavalheiro Dias\"\ndate: today\ncategories:\n - python\n - statistics\nengine: jupyter\ndraft: true\n---\n\n\nIn this article, I will try to do linear regressions with Python. \nThis is also an occasion for me to try python with Quarto. \n\n# Simple linear regression\n\n## Generating data\n\nA simple linear regression is a statistical model used when trying to explain one continuous variable with another continuous variable. \nLike in the previous article with Julia, let us first generate some random data. \nFor this, I found two main libraries. \nThe first one is the `random` library, and the second one is `numpy`.\n\nWith the random library, we can use the `random` method to generate by default a float number between 0 and 1. \nA way to create a vector of 100 randome value is to ise the random method between square brackets, followed by the for instruction, similar to the one in Julia. \nThis will generate a list of size 100, such that : \n\n::: {#1ade0b76 .cell execution_count=1}\n``` {.python .cell-code}\nimport random, operator\nprint(\"Hello World\")\ny = ([random.random() for _ in range(100)])\nx = ([random.random()*y[_] for _ in range(100)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello World\n```\n:::\n:::\n\n\nNow, let's plot it. To do that, we can use the matplotlib.pyplot package : \n\n::: {#9a06d314 .cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot\n\nmatplotlib.pyplot.plot(x,y, \"ro\")\nmatplotlib.pyplot.scatter(x,y)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=571 height=411}\n:::\n:::\n\n\nWithout the \"ro\" argument, it would have plotted points linked by a line, like in Julia. \nWe can also use the scatter() function.\n\n## Running a linear regression\n\n::: {#9ac7cc6a .cell execution_count=3}\n``` {.python .cell-code}\nimport scipy\nmodel = scipy.stats.linregress(x,y)\nmodel\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\nLinregressResult(slope=np.float64(0.8806278144831774), intercept=np.float64(0.28306966961178937), rvalue=np.float64(0.6396426049613376), pvalue=np.float64(7.868035911670351e-13), stderr=np.float64(0.10690137568206542), intercept_stderr=np.float64(0.033913367043462005))\n```\n:::\n:::\n\n\nWe now can plot it like that : \n\n::: {#ab4c1750 .cell execution_count=4}\n``` {.python .cell-code}\nslope, intercept, r, p, std_err = scipy.stats.linregress(x, y)\n\ndef myfunc(x):\n  return slope * x + intercept\n\nmymodel = list(map(myfunc, x))\n\nmatplotlib.pyplot.scatter(x,y)\nmatplotlib.pyplot.plot(x, mymodel)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=571 height=411}\n:::\n:::\n\n\nIf we only want the relevant information for our plot : \n\n::: {#424c307a .cell execution_count=5}\n``` {.python .cell-code}\nimport numpy\ndef f(x):\n    return scipy.stats.linregress(x, y)[1]+numpy.dot(x,scipy.stats.linregress(x, y)[0])\n\nfloat(scipy.stats.linregress(x, y)[1]),float(scipy.stats.linregress(x, y)[0])\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\n(0.28306966961178937, 0.8806278144831774)\n```\n:::\n:::\n\n\nIf we now want to plot : \n\n::: {#d496f18c .cell execution_count=6}\n``` {.python .cell-code}\nmatplotlib.pyplot.scatter(x,y)\nmatplotlib.pyplot.plot(x, f(x))\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=571 height=411}\n:::\n:::\n\n\nThis is a test. \n\n# Multiple linear regression\n\n## Static 3D Plot :\n\n::: {#f42c6e4e .cell execution_count=7}\n``` {.python .cell-code}\nx,y,z = (numpy.dot([random.random() for _ in range(100)],_) for _ in (1,2,3))\nlen(y)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\n100\n```\n:::\n:::\n\n\n::: {#d5627583 .cell execution_count=8}\n``` {.python .cell-code}\nA = matplotlib.pyplot.figure()\nB = A.add_subplot(projection='3d')\nB.scatter(x,y,z)\nB.set_xlabel(\"X\")\nB.set_ylabel(\"Y\")\nB.set_zlabel(\"Z\")\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\nText(0.5, 0, 'Z')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-2.png){width=408 height=397}\n:::\n:::\n\n\n## Rotatable 3D Plot \n\nNow it's time for a rotatable plot, like in the previous article. \n\n::: {#b22865d6 .cell execution_count=9}\n``` {.python .cell-code}\nimport plotly.express as px\nimport pandas\ndata = {'c1':[x],'c2':[y],'c3':[z]}\nX = pandas.DataFrame(data)\nfig = px.scatter_3d(X, x,y,z)\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"22c93a21-4106-4040-bfe1-8826cec0de60\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"22c93a21-4106-4040-bfe1-8826cec0de60\")) {                    Plotly.newPlot(                        \"22c93a21-4106-4040-bfe1-8826cec0de60\",                        [{\"hovertemplate\":\"x=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003ez=%{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"scene\":\"scene\",\"showlegend\":false,\"x\":[0.8166633433030028,0.5826436558996662,0.3555412232849613,0.26999206476213955,0.37098162630434284,0.22630549797653154,0.5069840924910894,0.3936828213394691,0.3947892313936755,0.5821260985838097,0.500088796164233,0.30841709083130964,0.42942273306822776,0.1607719880398374,0.32466713113616885,0.9638072430026817,0.7929766017174151,0.9614656644502335,0.6819002685208547,0.8083001213779205,0.2117390426023592,0.7445866219650639,0.4028009971569275,0.5415320617787489,0.28121378685060605,0.9555386635682114,0.39619755442499216,0.6002657768063131,0.457787057544745,0.1366917017777941,0.697342132323625,0.20859373588723717,0.7208005003991924,0.6975986390915321,0.5857585754826371,0.9447299984215695,0.5425660219039622,0.8073481731453231,0.8171642551456443,0.8255654483612722,0.2844251051367863,0.17467738098673324,0.5759094682533102,0.9505283874189112,0.46701275674959186,0.34136645606328153,0.8206813255737382,0.22035136878172268,0.6552175427836304,0.06705477755355771,0.5069521841796745,0.4810900849498462,0.033198062322293276,0.31802889289816993,0.10963217159270922,0.6588230074173574,0.49270281710878516,0.18065899258926799,0.7622349412676218,0.8815057425896508,0.8426938796767115,0.19360347911755793,0.988037943816301,0.8552174539442002,0.4500935984844836,0.9523632105322652,0.1957075060410599,0.7793138721943011,0.10559782599032674,0.36267731144276805,0.06078005303132794,0.5218881509627442,0.9009423717657069,0.7539956552336817,0.8796478095421959,0.5505815352111393,0.7799585130666358,0.21316992567505633,0.4833169636205893,0.06472880422794747,0.8660040607627291,0.4606652912664747,0.5646817371452563,0.245372033978435,0.05319628977982438,0.9391899465171542,0.8880918326575346,0.3567289686671259,0.04825561412899548,0.39719089732965773,0.033730825178948654,0.31325231154547495,0.004886964334354094,0.4891178794393064,0.5387462491616754,0.20428344968955847,0.6751591314075164,0.49350999364825066,0.48209005959042583,0.534124645283332],\"y\":[1.6732559778458758,1.2121267356981398,1.6157952387681607,1.0344765729178116,0.3169663238648013,0.17450198632044112,0.797161238212996,1.2851975472247965,0.5886183298501961,1.9753140201081774,1.7867564780781495,0.21222278952235163,0.49239246526166713,0.6190199812680572,0.5779659612794965,1.145633124268983,0.40686928001979705,0.17115468770766684,1.04162977423395,0.6757160369763184,1.2450764055454422,0.6378113523898452,0.3735432488313024,0.05425261912906909,1.2399354247270649,0.1570181363131602,1.5035576576045833,0.8136723299276187,0.6540496147111201,0.08972452819129906,0.8726470612006099,1.1392389934266378,0.8040963472278013,0.642162667533954,1.9094698744334853,1.200029277288917,1.8692639336111216,0.08161581334740942,1.9410359088813742,1.0266367938417695,0.45714861546655783,1.1107747890133866,1.8778749469664426,0.9477048515082427,1.6389656163103439,1.4564809045508142,0.8707600655719141,1.4795996669739824,0.816149945161879,0.642512199115093,0.624424666781761,0.8047628664225541,1.1179086935325044,1.8671675989385232,0.2730146304214396,0.8559169604090535,1.582633282688299,1.7451295766009542,0.505408593602237,0.9222688272654265,1.332763678662065,0.7513896552797343,0.9203992350868975,1.0571215951362853,1.9216491648974239,1.7197335399104665,1.3015041040152153,1.0441543474724944,1.5145462765106117,1.644063345880775,0.06654514160492342,1.0118399495814026,0.8723339336117462,1.0473976200979185,1.6491916417852197,0.8338059059378289,1.379168468301529,1.3937558876957747,0.5721172053437549,0.22435576700587956,0.07502476040974093,1.9659763938078791,1.2226239057628925,1.1687983016919363,1.2155496762983211,1.526809917614188,1.5739752312348654,0.31849262304477177,1.2643331903058503,1.5652811694544424,1.5707810452770632,1.0374431471527816,1.729979996345185,1.1031070835046872,1.5359962894825463,0.22838703024895346,1.714232458055561,0.5704554895716227,1.3198525882787013,0.5753479985940024],\"z\":[2.782704270310248,1.0470325936718377,2.9638053321916424,1.111289341427911,0.4391078592392623,0.09227534740555932,2.471816677505897,2.450649743540158,1.412817899864618,0.1368805933161713,1.1682207953014734,2.5805562111165816,2.765292359495501,2.7810456067192524,1.8726325384615436,2.2971295454528486,1.255164992119087,0.8173135206249909,2.78638206532777,1.5508940688467145,0.1604907941618815,1.598027431352246,1.758112672031415,2.7258115298742585,2.0378629222217293,1.9372181773893349,2.678548139991899,1.8852672273626219,1.993923222054209,0.0595046983130334,1.9528273961254041,0.20458729514883667,0.05361258358479326,1.611545277422183,1.3283459147942889,0.466749254640235,2.6611237906342216,0.4393156633256824,0.2945122702582996,1.7243368664323153,1.0557186027096686,0.8938709871961161,2.500333716342289,2.0832945284067317,1.9178246325460018,2.2270880500619397,1.3744762054460984,2.685252353054353,2.6928034985600497,1.716948816471709,2.300187913786108,1.0161439160421721,1.4979738425412803,2.595468072165047,0.10868872881595792,0.2386108280390028,2.0483952440974402,0.23662601599112232,1.0506337162253443,2.112164797977636,2.479108919338325,2.6162801728707357,1.7386791376266904,1.1517697608809963,0.42216243125598674,1.5695218571644494,1.4101009711915227,0.8443289760698874,2.9374335812596577,1.4737883921121693,2.7381114205311845,0.2394748854751948,2.2649012015941,1.4507881074924804,2.4396951238147837,1.7334407335037043,0.04738736619566708,2.3739183454280615,0.8792693579604224,0.4723402311498355,0.24486043141487557,0.964818021106999,0.11996127424413239,2.7912992889722785,1.4899057043745199,2.2585102537255155,0.5671643937606332,0.16221188303815726,2.2950570883510326,1.7019892891505735,1.8811354992721079,1.442314470116504,0.69897618208048,0.650712058185992,1.9012452561988686,0.23442433426247122,0.7726022626471535,1.8278106999413972,2.208261728054221,1.048109187020294],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"x\"}},\"yaxis\":{\"title\":{\"text\":\"y\"}},\"zaxis\":{\"title\":{\"text\":\"z\"}}},\"legend\":{\"tracegroupgap\":0}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('22c93a21-4106-4040-bfe1-8826cec0de60');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nFortunately, the plotly package does also exist for Python :)\n\nThis is great. \n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\nif (typeof require !== 'undefined') {\nrequire.undef(\"plotly\");\nrequirejs.config({\n    paths: {\n        'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n    }\n});\nrequire(['plotly'], function(Plotly) {\n    window._Plotly = Plotly;\n});\n}\n</script>\n\n"
      ]
    }
  }
}