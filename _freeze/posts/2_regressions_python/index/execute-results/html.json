{
  "hash": "de297884b3389b6f94e03ffb45b2b343",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear Regressions with Python\"\nauthor: \"Paulo Gugelmo Cavalheiro Dias\"\ndate: today\ncategories:\n - python\n - statistics\nengine: python3\ndraft: false\n---\n\n\nIn this article, I will try to do linear regressions with Python. \nThis is also an occasion for me to try Python with Quarto. \n\n# Quarto configuration for Python\n\nThis section is dedicated to using Python with [Quarto](https://quarto.org), since this website was done using Quarto (if you want to know more about it, you can check [their documentation here](https://quarto.org/docs/websites/) and [this project of mine](https://www.paulogcd.com/portfolio_tutorial/)).\nIf you do not use Quarto, you can just skip this section. \n\nThe Quarto Markdown format (with the .qmd extension) allows to embed code and text, formatted with Markdown.\nTo work with Python code in Quarto, we first have to use an engine that supports Python. \nFor that, we can use `python3` or `jupyter` for examples. \nThus, in our `YAML` header, we would enter : \n\n```{.yaml}\n---\nengine: python3\n# or : \nengine: jupyter\n---\n```\n\nWe can check our engines with quarto with the command `quarto check`. \nThis function is designed to \"verify [the] correct functioning of Quarto installation\" (from its description in documentation).\nRunning it returns the versions of different kernels that we can use.\n\nFinally, to include python code in our Quarto file, we can write : \n\n````\n```{{python}}\n# Some python code here\n```\n````\n\nFor example : \n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Getting the version of Python we are using : \nimport sys \nsys.version_info\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsys.version_info(major=3, minor=12, micro=4, releaselevel='final', serial=0)\n```\n\n\n:::\n:::\n\n\nHere, we are for example using Python 3.12.\n\n## Running Julia and R in the same document \n\nDepending on the engine we are using, we can also make use of other languages in the same Quarto document. \nSpecifying the `python3` engine in the `YAML` header of our Quarto document, we can run Julia and R in it.\nFor that, we need packages, such as `JuliaCall` for using Julia with R.\n\nTesting Julia yields : \n\n::: {.cell}\n\n```{.julia .cell-code}\n# Getting the version of Julia we are using : \nusing InteractiveUtils\nInteractiveUtils.versioninfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nJulia Version 1.10.4\nCommit 48d4fd48430 (2024-06-04 10:41 UTC)\nBuild Info:\n  Official https://julialang.org/ release\nPlatform Info:\n  OS: macOS (x86_64-apple-darwin22.4.0)\n  CPU: 4 Ã— Intel(R) Core(TM) i5-8210Y CPU @ 1.60GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-15.0.7 (ORCJIT, skylake)\nThreads: 1 default, 0 interactive, 1 GC (on 4 virtual cores)\nEnvironment:\n  DYLD_FALLBACK_LIBRARY_PATH = /Library/Frameworks/R.framework/Resources/lib:/Library/Java/JavaVirtualMachines/jdk-11.0.18+10/Contents/Home/lib/server\n```\n\n\n:::\n:::\n\n\nTesting R yields : \n\n::: {.cell}\n\n```{.r .cell-code}\n# Getting the version of R we are using : \nversion\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               _                           \nplatform       x86_64-apple-darwin20       \narch           x86_64                      \nos             darwin20                    \nsystem         x86_64, darwin20            \nstatus                                     \nmajor          4                           \nminor          3.3                         \nyear           2024                        \nmonth          02                          \nday            29                          \nsvn rev        86002                       \nlanguage       R                           \nversion.string R version 4.3.3 (2024-02-29)\nnickname       Angel Food Cake             \n```\n\n\n:::\n:::\n\n\nSince the rest of the article will exclusively be using Python, we will not mention further details of engines in Quarto.\nIt is however interesting to keep in mind that Quarto allows this multiple integration.\n\n# Simple linear regression\n\nThis section of the article treats how to do a simple linear regression with Python. \nWe will first generate random data, we will plot it, and we will then add the linear regression to our plot. \n\n## Generating data\n\nI found two main libraries to generate random data in Python. \nThe first one is the `random` library, and the second one is the `numpy` library.\n\nWith the random library, we can use the `random` method to generate by default a float number between 0 and 1. \nA way to create a vector of 100 random values is to use the `random` method between square brackets, followed by the `for` instruction, similar to the one in Julia. \nThis will generate a list of size fixed, such that : \n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport random\ny = ([random.random() for _ in range(100)])\nx = ([random.random()*y[_] for _ in range(100)])\n```\n:::\n\n\nLet us comment a bit this code : \n\n- It is possible to call methods with the name of their libraries in front of it.\nIn this sense, `random.random()` refers to the method `random()` inside the `random` library.\n- The underscore syntax `_` combined with `for` loops to iterated for a set number of times. \nBy default, the `_` symbol just refers to the last variable in memory of Python, but it can also be used like that. \n- The `range()` function allows to create a range object in Python. More specifically : \n\n> [It] return[s] an object that produces a sequence of integers from start (inclusive) to stop (exclusive) by step.\nRange(i, j) produces i, i+1, i+2, ..., j-1. Start defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\nThese are exactly the valid indices for a list of 4 elements.\nWhen step is given, it specifies the increment (or decrement).\n\nA second way of generating random data is using the numpy library. \nFor that, we use the `numpy.random.rand()` method : \n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy\nnumpy.random.rand(100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\narray([0.86254394, 0.74163881, 0.14768129, 0.14934972, 0.65119136,\n       0.38162095, 0.11118557, 0.13272156, 0.17725165, 0.20485326,\n       0.10496782, 0.09506275, 0.63320687, 0.16311847, 0.90797926,\n       0.01688592, 0.17749381, 0.61306927, 0.99767533, 0.28024172,\n       0.15195045, 0.77375383, 0.47169045, 0.14463562, 0.40362518,\n       0.51274508, 0.85488742, 0.40519313, 0.35437244, 0.21876326,\n       0.43098253, 0.12971904, 0.23162815, 0.739798  , 0.74238613,\n       0.98017982, 0.51949168, 0.20232348, 0.81906564, 0.50051391,\n       0.28757961, 0.24945211, 0.28628847, 0.14053342, 0.44789729,\n       0.18907726, 0.23383225, 0.18181597, 0.32942785, 0.92108476,\n       0.55910032, 0.63171191, 0.59871788, 0.3962234 , 0.2579303 ,\n       0.04177061, 0.62641287, 0.74611001, 0.04247077, 0.77501384,\n       0.70472132, 0.55842491, 0.07506288, 0.04856047, 0.87206189,\n       0.7252026 , 0.6927993 , 0.37769637, 0.36486275, 0.44312002,\n       0.13962919, 0.09076356, 0.77906699, 0.71021402, 0.30281236,\n       0.95389882, 0.98579859, 0.2922806 , 0.4326272 , 0.03986694,\n       0.78868615, 0.89206057, 0.85421043, 0.95104158, 0.41921568,\n       0.76663852, 0.67659017, 0.14392962, 0.38898023, 0.00264178,\n       0.19915115, 0.22458151, 0.11859189, 0.856862  , 0.56636816,\n       0.34821464, 0.20193083, 0.62782954, 0.28748353, 0.09333037])\n```\n\n\n:::\n:::\n\n\nHere, the `numpy.random.rand()` method also generates a random real number between 0 and 1. \nWe are going to stick with the first x variable created for the rest of the section.\n\n## Plotting the data\n\nNow that we generated some data, let us plot it.\nTo do that, we can use the [matplotlib library](https://matplotlib.org/). \nMore specifically, we are going to use pyplot inside matplotlib, and are thus going to import `matplotlib.pyplot` :\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport matplotlib.pyplot\nmatplotlib.pyplot.scatter(x,y)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n- The `scatter()` method of `matplotlib.pyplot` allows to plot a scatterplot with two vectors of the same size.\n\n> The `scatter()` \"method\" can also be considered as a function.\nThis distinction seems to also exist in other programming languages and is definitely worth understanding. \nFor the sake of linear regressions, it does not matter for now to develop a full understanding of this distinction.\nIn the rest of this article, we will thus stick to the \"method\" term without further explanation. \n\n## Fitting our model\n\nWe are now going to fit our statistical model with our randomly generated values. \nIn order for us to do that, we can use the `scipy.stats` library.\nThis library has a `linregress()` method that allows to compute the OLS estimates to explain the second variable with the first one : \n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport scipy\nmodel = scipy.stats.linregress(x,y)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinregressResult(slope=np.float64(0.8861331178670419), intercept=np.float64(0.27955182064906725), rvalue=np.float64(0.6698123441696561), pvalue=np.float64(2.5355776513129585e-14), stderr=np.float64(0.09923092351159478), intercept_stderr=np.float64(0.03175982980968593))\n```\n\n\n:::\n:::\n\n\nWe see that the `scipy.stats.linregress()` method returns a five elements object.\nTo make this method easier to use, we could generate five variables, define a function with those variables and plot a line based on this function : \n\n\n::: {.cell}\n\n```{.python .cell-code}\n# We define the five variables from the linregress() method :\nslope, intercept, r, p, std_err = scipy.stats.linregress(x, y)\n\n# We define a function returning a linear function with the slope and the intercept :\ndef myfunc(x):\n  return slope * x + intercept\n\n# We create a list object with the list() function that takes as an argument a map object, based on our function and on the variable x :\nmymodel = list(map(myfunc, x))\nmymodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[np.float64(1.1128942280962768), np.float64(0.2916409706105338), np.float64(0.2991161608933708), np.float64(0.4997933214176833), np.float64(0.2846358035757908), np.float64(0.2958402578321745), np.float64(0.44525931957417964), np.float64(0.7827868867174143), np.float64(0.28321881841037666), np.float64(0.298934068042868), np.float64(0.3026888494760142), np.float64(0.6818035790582518), np.float64(0.6587836585846951), np.float64(0.2957783132146901), np.float64(0.4832992764009061), np.float64(0.6361548357422078), np.float64(0.630053058441783), np.float64(0.45692758628392455), np.float64(0.8065391432387767), np.float64(0.3839440557628022), np.float64(0.3023401748259388), np.float64(0.3130267228455016), np.float64(0.5294777477264555), np.float64(0.30612889158049367), np.float64(0.31849191787723197), np.float64(0.48923990251987515), np.float64(0.704104118733439), np.float64(0.28264369648810617), np.float64(0.2855984299573356), np.float64(0.41603499472583594), np.float64(0.4254092988283936), np.float64(0.518151643380156), np.float64(0.3118143584778062), np.float64(0.34506616312513166), np.float64(0.3683244663550261), np.float64(0.5230936979869635), np.float64(0.39942298428001644), np.float64(0.29520467525234534), np.float64(0.6008455784860726), np.float64(0.9095306955323068), np.float64(0.31360445462039027), np.float64(0.2951812623049543), np.float64(0.47418666224355815), np.float64(0.580809607453203), np.float64(0.30767960241529246), np.float64(0.7797901609905709), np.float64(0.8147561874228744), np.float64(0.4059956752767153), np.float64(0.7161276103945875), np.float64(0.9238745536124633), np.float64(0.6417423046950912), np.float64(0.2941625362633853), np.float64(0.30119136083497006), np.float64(0.5635820545395647), np.float64(0.676458344685724), np.float64(0.3211765068790482), np.float64(0.5210826526646316), np.float64(0.6672905350694212), np.float64(0.3200246347981671), np.float64(0.32619970340318083), np.float64(0.5025089400872462), np.float64(0.3303849844966191), np.float64(0.5428319198908202), np.float64(0.5844300924615313), np.float64(0.3845303864829479), np.float64(0.2843615424115652), np.float64(0.4703663263099595), np.float64(0.7894843745095186), np.float64(0.6485354115688924), np.float64(0.40684160932144253), np.float64(0.46955661264659987), np.float64(0.3761774904810534), np.float64(0.6450293362797632), np.float64(0.3218344335713008), np.float64(0.379925875670456), np.float64(0.5947156995072862), np.float64(0.47163789528217215), np.float64(0.5602910878865376), np.float64(0.7040729777299035), np.float64(0.3738833321485584), np.float64(0.32819452082886447), np.float64(0.7198901903386494), np.float64(0.35250259410914075), np.float64(0.34720439717918916), np.float64(0.3126568908611336), np.float64(0.596085662490456), np.float64(0.7128955406373321), np.float64(0.2951996989020772), np.float64(0.7710109747998166), np.float64(0.4201674733931373), np.float64(1.0289873868069592), np.float64(0.34938504559644684), np.float64(0.3154464553803972), np.float64(0.5564971189918999), np.float64(0.38386326534186477), np.float64(0.32679835893396064), np.float64(0.32736973730411856), np.float64(0.5924286710800826), np.float64(0.9637172760610173), np.float64(0.3030523018705367)]\n```\n\n\n:::\n:::\n\n\nThe definition of the variable `mymodel` is worth explaning a bit more in details.\nThe `list()` function is used to create a `list` object (which is considered one of the most versatile objects in Python), like the `c()` function creates a vector in R.\nThe `map()` function returns a map object, defined as : \n\n> map(func, *iterables) --> map object\nMake an iterator that computes the function using arguments from each of the iterables.  Stops when the shortest iterable is exhausted.\n\nin the Python documentation. \n\nNow, if we want to add this line to our plot, we can run : \n\n\n::: {.cell}\n\n```{.python .cell-code}\nmatplotlib.pyplot.scatter(x,y)\nmatplotlib.pyplot.plot(x, mymodel)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n:::\n\n\nWhile it is curious that the variable mymodel is displayed as a continuous line, it works, so I am fine with this solution for now.\n\nIf we want only the more relevant information, we can choose to only work with the two first elements of the array, and plot it, we can do in a more concise way :\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndef f(x):\n    return scipy.stats.linregress(x, y)[1]+numpy.dot(x,scipy.stats.linregress(x, y)[0])\n\nfloat(scipy.stats.linregress(x, y)[1]),float(scipy.stats.linregress(x, y)[0])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(0.27955182064906725, 0.8861331178670419)\n```\n\n\n:::\n\n```{.python .cell-code}\nmatplotlib.pyplot.scatter(x,y)\nmatplotlib.pyplot.plot(x, f(x))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-5.png){width=672}\n:::\n:::\n\n\nWe note here that we are using the `numpy.dot()` method from the `numpy` library. \nThis method allows us to do the dot product of two different matrixes.\nIn our case, doing only `x * scipy.stats.linregress(x,y)[0]` would have returned an error, since `x` and the other term are not of the same dimension.\nThis method thus allows to avoid this error by vectorizing the multiplication. \n\nNow that we covered a how to perform a simple linear regression with Python, let us move to a multiple linear regression.\n\n# Multiple linear regression\n\nIn this section, we are going to perform a multiple linear regression. \nFirst, we are going to generate data and fit our model.\nThen, we will plot a static scatter plot, and finally a rotatable plot. \n\n## Running a multiple linear regression\n\nFirst, let us generate some random data and fit our model : \n\n\n::: {.cell}\n\n```{.python .cell-code}\n# We randomly generate four variables of length 100 :\nw,x,y,z = (numpy.dot([random.random() for _ in range(100)],_) for _ in (1,2,3,4))\n# Just to check the length : \nlen(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n100\n```\n\n\n:::\n:::\n\n\n## Plotting a static 3D plot\n\nIf we now want to limit ourselves to a four dimensional problem, we can plot 3D graphs with colors representing the fourth dimension. \nIn this section, we are first going to plot a static graph. \n\n\n::: {.cell}\n\n```{.python .cell-code}\n# We create the framework of a plot first, that we name \"figure\" : \nfigure = matplotlib.pyplot.figure()\n\n# In this figure, we are going to use the add_subplot method to create a three dimensional projection : \nprojection = figure.add_subplot(projection='3d')\n\n# In this three dimensional space, we are going to project our points in a scatterplot way.\n# The argument 'c' stands for the color of the points :\nprojection.scatter(x,y,z, c = w)\n\n# Finally, we give each of our axis a name : \nprojection.set_xlabel(\"X\")\nprojection.set_ylabel(\"Y\")\nprojection.set_zlabel(\"Z\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-7.png){width=672}\n:::\n:::\n\n\nThe syntax of this example can be a bit hard to understand at first, but is required when using `matplotlib.pyplot` library.\n\n## Plotting a rotatable 3D plot \n\nNow it's time for a rotatable plot, like in the previous article. \nFortunately, the plotly library does also exist for Python, which is great, because I did not find any other library that yielded a similar result. \nHowever, to use plotly, we need the pandas library.  \nWe can thus create a dataframe object from a dictionary with the four previously created vectors. \nIn the end, we get : \n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport plotly.express as px\nimport pandas\ndata = {'c1':[x],'c2':[y],'c3':[z],'c4':[w]}\nX = pandas.DataFrame(data)\nfig = px.scatter_3d(X, x,y,z, color=w)\nfig.show()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div>                        <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.32.0.min.js\"></script>                <div id=\"e5fc90a9-29f7-4059-bc3e-f0f0d9ad6cb5\" class=\"plotly-graph-div\" style=\"height:100%; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e5fc90a9-29f7-4059-bc3e-f0f0d9ad6cb5\")) {                    Plotly.newPlot(                        \"e5fc90a9-29f7-4059-bc3e-f0f0d9ad6cb5\",                        [{\"hovertemplate\":\"x=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003ez=%{z}\\u003cbr\\u003ecolor=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[0.9986177821616407,0.7939324099121003,0.5537920668492435,0.35985693684135267,0.16128079929724937,0.3582211405462563,0.6146382185759246,0.14907972620241028,0.36234801214017076,0.2764423985477995,0.36965685081068345,0.054555630263244614,0.49491760776357174,0.08935411254695791,0.6126467833145736,0.4319346583696374,0.9790402504556869,0.546821781074203,0.3106185300522488,0.07229071940656795,0.6965091177913655,0.8327208823569534,0.5449893021716236,0.12063106367481202,0.9419819615348152,0.12067581766599389,0.152134037718746,0.8011670177141663,0.5991519060195262,0.1346233463285894,0.5121728685000789,0.604198780505276,0.376723014890741,0.5724981681791901,0.8638659539498873,0.15213174050101874,0.00678466989654869,0.3938881987098085,0.7181134394303752,0.8286191118459271,0.40617451462096754,0.4823543488264548,0.41854130696932423,0.5572878097347708,0.4808654989805361,0.13581587878934576,0.44893583764781986,0.590697851411571,0.19720204422183996,0.4869051070937228,0.8641137034826328,0.24873502160507455,0.1181858827556993,0.27413983372846573,0.05698609031847168,0.346260555724864,0.3507526002153567,0.7782959875689274,0.3599461389813128,0.32071380267542415,0.14986354786956735,0.25992998211099005,0.5648032731769439,0.7834619566832567,0.06144037998607965,0.8841352708346666,0.6127821923152329,0.37518895300223476,0.5247474571839778,0.26780399106484265,0.2804699645262868,0.9798298543791351,0.0814609969472887,0.021928910076918995,0.34324291264671203,0.9164472439307693,0.365439383810532,0.7225642127764806,0.6901880707566661,0.8394774337544479,0.8187665625750594,0.004187887579613525,0.5681045417793723,0.6809762888596751,0.6950196027330388,0.14446957080064737,0.6397676482802165,0.1366114887912825,0.9980338230583252,0.2824176150093395,0.6672938706618141,0.8315462740494317,0.23791261832951138,0.34684118861468294,0.6637348209007581,0.9496993503209683,0.6131655100058778,0.829085438012805,0.780717814594735,0.81174494147555],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"scene\":\"scene\",\"showlegend\":false,\"x\":[0.20404860243880307,0.044788627931980685,0.39203601803106425,1.025280642499966,0.8812549469464832,1.8267512746250452,0.49915515607255356,0.011797707056072193,1.5290960907495785,0.815512344850051,1.892633808892431,0.30261303383411864,0.8001777315749279,0.9242087825142227,0.9263821392417979,1.1884623656118678,1.1220752915220635,0.34393465871471585,1.6055975686651665,1.5562776611502385,1.306363443480849,0.3869254555030559,1.0633769952231076,1.4428608993484715,0.22455542841987297,0.47764750465439376,0.7030955823007212,0.812431523329328,0.9739664474624878,1.7785973417478584,0.1987700805557815,0.8173754345375135,0.40855310460232164,0.5188215228124862,0.3719826969921194,1.4418265671283281,1.838522138221175,0.625184653264246,1.7329429218862842,0.2642516456315793,1.8449235256506322,1.194216180699962,0.5591264325353273,1.4515516469312713,1.2963686941527,1.4597807676758217,1.7928040757097115,1.7389287413638683,1.2504291711756266,1.9325584121663204,1.3561389405872226,0.4877995260720378,0.0072935310993829106,0.8603424790324945,0.30786059481635775,0.25975500706968346,1.218149839668586,1.1431101680675493,1.5408199290380582,0.6868127423649042,1.1890245535227533,1.652121411140339,0.816350939900159,0.5364549995559715,0.8077450341801371,1.6549069605668203,0.1236276277074595,1.0301275919506565,0.2504345468507603,1.8433730132256092,0.4427233372945063,1.4692974893735504,0.9118916691965204,0.8378885345676101,0.8336831033231951,1.276473409545424,1.2035832149160957,1.530927895678319,0.7370157550576588,1.3953257895580684,0.12070580830476563,0.6819681489998655,1.672143365437536,1.06001416436239,0.9450360060355958,0.9073698367794569,1.2223486552075846,1.2191333892640979,1.664245312991799,1.8251865155485913,1.9917579476141642,0.3081510209452458,1.09913546766667,1.3293408807744849,0.2108355596513809,0.07396916547438304,1.7939682053608905,1.742935904711845,1.1781427886850189,1.3322978905647613],\"y\":[1.2507071722820304,0.8380104822436527,0.39549732966733675,1.004353958802287,2.25404643774266,2.436125434559336,0.7665080507261159,2.095252950042747,2.4957603693443255,2.1899286244550424,0.04217743139949892,0.19458910267387441,0.7774104539336837,1.8913005359717396,2.367721391169517,0.6576848650199386,1.0571449470382883,1.9849727174026766,1.594310089459989,0.8271154057134481,1.5225429831004698,1.5930479313562547,1.4228285763568806,2.967448648743772,2.6821674815759646,2.334599396949909,0.4135532484108517,0.07367298328885763,0.17622306272966426,2.2909093566368046,1.968187825843649,0.2124195367853794,0.1944987711107692,2.5854192168543095,2.3417825479324965,1.9642759222843758,2.1113712538443243,0.16276524583541851,0.14553961533523951,1.3673627404260933,0.41188122181326803,1.3927540832719818,2.844892326092592,0.6174025679162003,2.876723324772912,0.9455272514120441,0.7647590763142782,0.038538031972228604,2.2808961418344307,2.44000579628599,1.131223996841869,2.384795195800916,1.0354259978876232,1.663072558086956,2.7046806444009146,2.4514471713363144,0.737145624189603,1.9129742915647223,1.9301886767524712,1.1062895540491977,2.6609866332018406,1.626529568993572,2.4778178923994942,0.06005220333653094,0.19666428973886252,1.4606325402993994,2.557109255975468,1.7981569798011432,1.6688128686425525,1.903092466318072,2.7973364824218816,0.055216217037214355,0.17700590537777794,2.1039701772105857,2.1413510345414877,0.9278875292586565,0.4946524909011595,0.02431008370598886,2.9521865100769302,0.9127009715299692,0.49476726998601606,1.886774165093713,1.6147612833316631,0.7471720071865771,0.38575080992547484,0.24990007727552777,2.4018795927999603,1.0214248103939445,0.9377166367588479,1.0539169482885975,2.696432691801032,1.643175234398639,0.8966990202661698,1.5200123461245436,2.9499416854563165,0.144398469857133,1.1894427823211007,1.2160052689851235,0.9457760864406214,1.1654123371989373],\"z\":[0.3507170498966339,0.18439110066733289,2.604318798159783,2.6142892164603917,1.7407913162445334,0.457408126043644,1.4146845677484454,2.597876476392771,0.12603229720812337,3.2126114429913186,1.7635528098180129,3.5072924797581084,2.9148809788824215,2.027656389209641,2.2596800475459147,2.2624641280054893,2.2984640648196084,1.6972348952851162,2.0991243107908093,2.1168450687870735,3.7235906473764824,2.280649066622676,1.4525988889941077,0.6705152134223313,2.8580579305856957,3.588047369403744,0.06265320134234331,3.2024304208580356,1.762127634888996,2.518350607302759,1.0083334624541553,0.875730477753915,1.2169432200037118,0.6992620774307179,2.8463301300960206,2.1165984618942497,1.1431100264322063,2.9089517461602936,0.7603942249843154,3.5128259106177433,1.285684466251399,0.30475919169268906,3.3646810744764237,2.0955730733287963,3.639897335884918,0.7249015790561701,0.31669686165667343,0.8009141759888649,2.9108792510025823,0.3483104310777039,3.980945052608329,1.7960840210197975,0.032726506861803895,0.472733938982294,2.152724544025094,0.8967813373557858,1.9890127770914194,3.7529016544380567,2.5280159529308435,2.0815713288184643,1.3619567736749034,2.0738851352690473,1.5666706689007635,0.3781083024314533,0.32482249225704596,2.197191069916012,2.884918180035667,1.8037640686192256,2.5629989090050076,2.5471390437142643,2.0761255813379096,3.612200702327669,2.189317512088705,0.44457277891639535,2.2036409693822487,1.5558930936464308,2.0564069601811354,0.7747165014422968,1.0194985594916992,2.555164130200955,2.3587703823110124,2.25414331964953,2.928233339673521,3.876980407484715,2.8296696363526657,1.5102485368502112,2.976676213809896,2.0554350473076157,0.7364600996708095,3.6655303093917206,1.092459019650689,3.168848739509361,2.4811428930511914,0.49237339832773674,3.2288193463603436,3.5442576952909977,3.147286292431524,0.05894582291734718,0.11793007924796095,3.757788382108787],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"x\"}},\"yaxis\":{\"title\":{\"text\":\"y\"}},\"zaxis\":{\"title\":{\"text\":\"z\"}}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"color\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    )                };                            </script>        </div>\n```\n\n:::\n:::\n\n\nWe note that this yields a plot with similar features to the ones obtained in [the previous article with Julia](https://www.paulogcd.com/blog/posts/1_regressions_julia/). \nThe reason for that is that both obtained plots are done using the plotly library. \n\nIf we now want to show the three dimensional plane that satisfies the OLS equation, we could use several libraries. \n\nLet us say that we want to explain the `z` variable by x and y.\nOne approach that seems to be widely used is to use the `sklearn` library. \nMore specifically, we could use the `sklearn.linear_model` package :  \n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport sklearn.linear_model\n\n# We create an object that regroups x and y : \nregressors = numpy.array([[x],[y]])\n\n# Now, we compute the estimates using a multinomial linear regression : \n\n# We create the object 'model' that has the LinearRegression() class from the sklearn.linear_model package : \nmodel = sklearn.linear_model.LinearRegression()\n\n# We have to modify the dimensions of our data : \nnsamples, nx, ny = regressors.shape\nregressors_2 = regressors.reshape((nsamples,nx*ny))\n\n# We make it fit our data : \n\nX = numpy.array([[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]])\nY = numpy.array([1, 2, 3, 4])\n \n# Create an instance of the LinearRegression class\nreg = sklearn.linear_model.LinearRegression()\n \n# Fit the model to the data\nreg.fit(X, Y)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"â–¸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"â–¾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>\n```\n\n:::\n:::\n\n\nNow that we have determined our model, we can plot its three dimensional plane on a plot : \n\n\n::: {.cell}\n\n```{.python .cell-code}\nfig = px.scatter_3d(X, x,y,z, color=w)\nfig.show()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div>                        <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.32.0.min.js\"></script>                <div id=\"12b0b288-edb7-40ea-b05b-ecf028a1dd4c\" class=\"plotly-graph-div\" style=\"height:100%; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"12b0b288-edb7-40ea-b05b-ecf028a1dd4c\")) {                    Plotly.newPlot(                        \"12b0b288-edb7-40ea-b05b-ecf028a1dd4c\",                        [{\"hovertemplate\":\"x=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003ez=%{z}\\u003cbr\\u003ecolor=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[0.9986177821616407,0.7939324099121003,0.5537920668492435,0.35985693684135267,0.16128079929724937,0.3582211405462563,0.6146382185759246,0.14907972620241028,0.36234801214017076,0.2764423985477995,0.36965685081068345,0.054555630263244614,0.49491760776357174,0.08935411254695791,0.6126467833145736,0.4319346583696374,0.9790402504556869,0.546821781074203,0.3106185300522488,0.07229071940656795,0.6965091177913655,0.8327208823569534,0.5449893021716236,0.12063106367481202,0.9419819615348152,0.12067581766599389,0.152134037718746,0.8011670177141663,0.5991519060195262,0.1346233463285894,0.5121728685000789,0.604198780505276,0.376723014890741,0.5724981681791901,0.8638659539498873,0.15213174050101874,0.00678466989654869,0.3938881987098085,0.7181134394303752,0.8286191118459271,0.40617451462096754,0.4823543488264548,0.41854130696932423,0.5572878097347708,0.4808654989805361,0.13581587878934576,0.44893583764781986,0.590697851411571,0.19720204422183996,0.4869051070937228,0.8641137034826328,0.24873502160507455,0.1181858827556993,0.27413983372846573,0.05698609031847168,0.346260555724864,0.3507526002153567,0.7782959875689274,0.3599461389813128,0.32071380267542415,0.14986354786956735,0.25992998211099005,0.5648032731769439,0.7834619566832567,0.06144037998607965,0.8841352708346666,0.6127821923152329,0.37518895300223476,0.5247474571839778,0.26780399106484265,0.2804699645262868,0.9798298543791351,0.0814609969472887,0.021928910076918995,0.34324291264671203,0.9164472439307693,0.365439383810532,0.7225642127764806,0.6901880707566661,0.8394774337544479,0.8187665625750594,0.004187887579613525,0.5681045417793723,0.6809762888596751,0.6950196027330388,0.14446957080064737,0.6397676482802165,0.1366114887912825,0.9980338230583252,0.2824176150093395,0.6672938706618141,0.8315462740494317,0.23791261832951138,0.34684118861468294,0.6637348209007581,0.9496993503209683,0.6131655100058778,0.829085438012805,0.780717814594735,0.81174494147555],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"scene\":\"scene\",\"showlegend\":false,\"x\":[0.20404860243880307,0.044788627931980685,0.39203601803106425,1.025280642499966,0.8812549469464832,1.8267512746250452,0.49915515607255356,0.011797707056072193,1.5290960907495785,0.815512344850051,1.892633808892431,0.30261303383411864,0.8001777315749279,0.9242087825142227,0.9263821392417979,1.1884623656118678,1.1220752915220635,0.34393465871471585,1.6055975686651665,1.5562776611502385,1.306363443480849,0.3869254555030559,1.0633769952231076,1.4428608993484715,0.22455542841987297,0.47764750465439376,0.7030955823007212,0.812431523329328,0.9739664474624878,1.7785973417478584,0.1987700805557815,0.8173754345375135,0.40855310460232164,0.5188215228124862,0.3719826969921194,1.4418265671283281,1.838522138221175,0.625184653264246,1.7329429218862842,0.2642516456315793,1.8449235256506322,1.194216180699962,0.5591264325353273,1.4515516469312713,1.2963686941527,1.4597807676758217,1.7928040757097115,1.7389287413638683,1.2504291711756266,1.9325584121663204,1.3561389405872226,0.4877995260720378,0.0072935310993829106,0.8603424790324945,0.30786059481635775,0.25975500706968346,1.218149839668586,1.1431101680675493,1.5408199290380582,0.6868127423649042,1.1890245535227533,1.652121411140339,0.816350939900159,0.5364549995559715,0.8077450341801371,1.6549069605668203,0.1236276277074595,1.0301275919506565,0.2504345468507603,1.8433730132256092,0.4427233372945063,1.4692974893735504,0.9118916691965204,0.8378885345676101,0.8336831033231951,1.276473409545424,1.2035832149160957,1.530927895678319,0.7370157550576588,1.3953257895580684,0.12070580830476563,0.6819681489998655,1.672143365437536,1.06001416436239,0.9450360060355958,0.9073698367794569,1.2223486552075846,1.2191333892640979,1.664245312991799,1.8251865155485913,1.9917579476141642,0.3081510209452458,1.09913546766667,1.3293408807744849,0.2108355596513809,0.07396916547438304,1.7939682053608905,1.742935904711845,1.1781427886850189,1.3322978905647613],\"y\":[1.2507071722820304,0.8380104822436527,0.39549732966733675,1.004353958802287,2.25404643774266,2.436125434559336,0.7665080507261159,2.095252950042747,2.4957603693443255,2.1899286244550424,0.04217743139949892,0.19458910267387441,0.7774104539336837,1.8913005359717396,2.367721391169517,0.6576848650199386,1.0571449470382883,1.9849727174026766,1.594310089459989,0.8271154057134481,1.5225429831004698,1.5930479313562547,1.4228285763568806,2.967448648743772,2.6821674815759646,2.334599396949909,0.4135532484108517,0.07367298328885763,0.17622306272966426,2.2909093566368046,1.968187825843649,0.2124195367853794,0.1944987711107692,2.5854192168543095,2.3417825479324965,1.9642759222843758,2.1113712538443243,0.16276524583541851,0.14553961533523951,1.3673627404260933,0.41188122181326803,1.3927540832719818,2.844892326092592,0.6174025679162003,2.876723324772912,0.9455272514120441,0.7647590763142782,0.038538031972228604,2.2808961418344307,2.44000579628599,1.131223996841869,2.384795195800916,1.0354259978876232,1.663072558086956,2.7046806444009146,2.4514471713363144,0.737145624189603,1.9129742915647223,1.9301886767524712,1.1062895540491977,2.6609866332018406,1.626529568993572,2.4778178923994942,0.06005220333653094,0.19666428973886252,1.4606325402993994,2.557109255975468,1.7981569798011432,1.6688128686425525,1.903092466318072,2.7973364824218816,0.055216217037214355,0.17700590537777794,2.1039701772105857,2.1413510345414877,0.9278875292586565,0.4946524909011595,0.02431008370598886,2.9521865100769302,0.9127009715299692,0.49476726998601606,1.886774165093713,1.6147612833316631,0.7471720071865771,0.38575080992547484,0.24990007727552777,2.4018795927999603,1.0214248103939445,0.9377166367588479,1.0539169482885975,2.696432691801032,1.643175234398639,0.8966990202661698,1.5200123461245436,2.9499416854563165,0.144398469857133,1.1894427823211007,1.2160052689851235,0.9457760864406214,1.1654123371989373],\"z\":[0.3507170498966339,0.18439110066733289,2.604318798159783,2.6142892164603917,1.7407913162445334,0.457408126043644,1.4146845677484454,2.597876476392771,0.12603229720812337,3.2126114429913186,1.7635528098180129,3.5072924797581084,2.9148809788824215,2.027656389209641,2.2596800475459147,2.2624641280054893,2.2984640648196084,1.6972348952851162,2.0991243107908093,2.1168450687870735,3.7235906473764824,2.280649066622676,1.4525988889941077,0.6705152134223313,2.8580579305856957,3.588047369403744,0.06265320134234331,3.2024304208580356,1.762127634888996,2.518350607302759,1.0083334624541553,0.875730477753915,1.2169432200037118,0.6992620774307179,2.8463301300960206,2.1165984618942497,1.1431100264322063,2.9089517461602936,0.7603942249843154,3.5128259106177433,1.285684466251399,0.30475919169268906,3.3646810744764237,2.0955730733287963,3.639897335884918,0.7249015790561701,0.31669686165667343,0.8009141759888649,2.9108792510025823,0.3483104310777039,3.980945052608329,1.7960840210197975,0.032726506861803895,0.472733938982294,2.152724544025094,0.8967813373557858,1.9890127770914194,3.7529016544380567,2.5280159529308435,2.0815713288184643,1.3619567736749034,2.0738851352690473,1.5666706689007635,0.3781083024314533,0.32482249225704596,2.197191069916012,2.884918180035667,1.8037640686192256,2.5629989090050076,2.5471390437142643,2.0761255813379096,3.612200702327669,2.189317512088705,0.44457277891639535,2.2036409693822487,1.5558930936464308,2.0564069601811354,0.7747165014422968,1.0194985594916992,2.555164130200955,2.3587703823110124,2.25414331964953,2.928233339673521,3.876980407484715,2.8296696363526657,1.5102485368502112,2.976676213809896,2.0554350473076157,0.7364600996708095,3.6655303093917206,1.092459019650689,3.168848739509361,2.4811428930511914,0.49237339832773674,3.2288193463603436,3.5442576952909977,3.147286292431524,0.05894582291734718,0.11793007924796095,3.757788382108787],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"x\"}},\"yaxis\":{\"title\":{\"text\":\"y\"}},\"zaxis\":{\"title\":{\"text\":\"z\"}}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"color\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    )                };                            </script>        </div>\n```\n\n:::\n:::\n\n\nTest.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}